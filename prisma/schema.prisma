// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  favoriteIds    String[]  @db.ObjectId

  accounts Account[]
  todos    Todo[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Todo {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String?
  status    TodoStatus @default(TODO)
  createdAt DateTime   @default(now())
  userId    String     @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum TodoStatus {
  TODO
  IN_PROGRESS
  DONE
}

// model Reservation {
//   id         String   @id @default(auto()) @map("_id") @db.ObjectId
//   userId     String   @db.ObjectId
//   listingId  String   @db.ObjectId
//   startDate  DateTime
//   endDate    DateTime
//   totalPrice Int
//   createdAt  DateTime @default(now())

//   user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
//   listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
// }
